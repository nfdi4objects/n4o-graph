# Systemarchitektur {#sec-architecture}

Der N4O Graph besteht im Kern aus einem Triple-Store, an den verschiedene Dienste zur Verwaltung und Nutzung angebunden sind. Die Dienste werden in einzelnen git-Repositorien verwaltet und als Docker-Images publiziert:

- [n4o-fuseki](https://github.com/nfdi4objects/n4o-fuseki): vorkonfigurierter Triple-Store
- [n4o-graph-apis](https://github.com/nfdi4objects/n4o-graph-apis): APIs und Weboberfl채che zum lesenden Zugriff
- [n4o-graph-importer](https://github.com/nfdi4objects/n4o-graph-importer): Workflows und APIs zum schreibenden Zugriff
- [lido-rdf-converter](https://github.com/nfdi4objects/lido-rdf-converter): Skripte und Webanwendung zur Konvertierung von LIDO nach RDF

Dar체ber hinaus gibt es das Repository [n4o-graph](https://github.com/nfdi4objects/n4o-graph) zur Dokumentation und Konfiguration der Dienste als Gesamtheit, darunter auch dieses Handbuch.


## Workflow

Der gesamte Prozess zur Integration von Daten in den Knowledge Graphen beinhaltet besteht aus mehreren Schritten.
Zur Datenannahme, Pr체fung und Bereinigung siehe  <https://github.com/nfdi4objects/n4o-graph-importer>.
Dort findet sich unter anderem das offizielle [XML-Schema f체r LIDO-Daten](https://github.com/nfdi4objects/lido-schema).

LIDO-XML-Daten werden mit Hilfe von [X3ML](https://github.com/isl/x3ml) ins RDF-Format konvertiert. 

