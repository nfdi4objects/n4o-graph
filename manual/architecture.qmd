---
title: Systemarchitektur
subtitle: Technischer Aufbau des Knowledge Graphen
---

Der N4O Graph besteht im Kern aus einem [Triple-Store](#triple-store), an den verschiedene Dienste zur Verwaltung und Nutzung angebunden sind. Diese Dienste werden in einzelnen git-Repositorien entwickelt und als Docker-Images publiziert:

- [n4o-fuseki](https://github.com/nfdi4objects/n4o-fuseki): vorkonfigurierter Triple-Store
- [n4o-graph-apis](https://github.com/nfdi4objects/n4o-graph-apis): APIs und Weboberfläche zum lesenden Zugriff
- [n4o-graph-importer](https://github.com/nfdi4objects/n4o-graph-importer): Workflows und APIs zum schreibenden Zugriff
- [lido-rdf-converter](https://github.com/nfdi4objects/lido-rdf-converter): Skripte und Webanwendung zur Konvertierung von LIDO nach RDF

Darüber hinaus gibt es das Repository [n4o-graph](https://github.com/nfdi4objects/n4o-graph) zur Dokumentation und Konfiguration der Dienste als Gesamtheit, darunter auch dieses Handbuch.

## Datenfluss

Folgendes Diagram illustriet den Datenfluss im Gesamtsystem. Die einzelnen Docker-Container sind gelb. Quellen, Ziele und Speicherorte von Daten sind blau. Verarbeitungsschritte und Schnittstellen sind violett oder grau.

```{mermaid}
graph TD
    terminologies(terminologies) --> receive
    mappings(mappings) --> receive
    collections(collections) --> receive
    stage(stage)

    subgraph importer ["n4o-graph-**importer**"]
        receive[**register & receive**]
        receive -- validate, transform, report --> stage
        stage --> load
        load[**load**]
    end
    subgraph fuseki ["n4o-**fuseki**"]
        kg(triple store)
    end
    subgraph lido ["lido-rdf-**converter**"]
        lido2rdf[**lido2rdf**]
        web-app[**web-app**]
    end
    stage --> n4ograph["n4o-graph-**apis**"]
    kg -- SPARQL --> n4ograph
    n4ograph -- SPARQL --> apps(applications)

    receive <-..-> lido2rdf
    load -- SPARQL update & graph store --> kg

    web-app <--> n4ograph

    n4ograph <--web browser--> users(users)
    
classDef data stroke:#4d8dd1, fill:#D4E6F9, color:#333;
classDef prime fill: #ECECFF, color:#333, stroke:#9370DB;
classDef box fill:#ffffde, stroke:#aaaa33, color:#333;
class terminologies,mappings,collections,stage,kg,apps,users data;
class receive,load,lido2rdf,web-app prime;
class importer,fuseki,n4ograph,lido box;
linkStyle default color:black;
```
